{
  "compilerOptions": {
    "target": "es2022" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
    "module": "commonjs" /* Specify what module code is generated. */,
    "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
    "baseUrl": "." /* Specify the base directory to resolve non-relative module names. */,
    "paths": {
      "@src/*": ["src/*"],
      "@configs/*": ["src/configs/*"],
      "@database": ["src/database"],
      "@models": ["src/models"],
      "@models/*": ["src/models/*"],
      "@express": ["src/configs/express"],
      "@aws": ["src/configs/aws"],
      "@apiV1/*": ["src/api/v1/*"],
    } /* Specify a set of entries that re-map imports to additional lookup locations. */,
    "rootDirs": ["src"], /* Allow multiple folders to be treated as one when resolving modules. */
    "typeRoots": ["src/configs/types"] /* Specify multiple folders that act like './node_modules/@types'. */,
    "resolveJsonModule": true /* Enable importing .json files. */,
    "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
    "outDir": "dist" /* Specify an output folder for all emitted files. */,
    "removeComments": true /* Disable emitting comments. */,
    "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
    "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
    "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,
    "strict": true /* Enable all strict type-checking options. */,
    "skipLibCheck": true /* Skip type checking all .d.ts files. */,
    "lib": ["es2022", "dom", "dom.iterable"] /* Specify library files to be included in the compilation. */,
  },
  "include": ["src/**/*.ts", "src/configs/database/config.sequelize.js"],
  "exclude": ["node_modules", "dist"],
  "ts-node": { "require": ["tsconfig-paths/register"] }
}
